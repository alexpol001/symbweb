<?php

namespace backend\controllers;

use backend\controllers\common\CRUDController;
use common\models\material\Group;
use common\models\material\Material;
use common\models\material\search\Material as MaterialSearch;
use yii\web\NotFoundHttpException;

class MaterialController extends CRUDController
{
    public function init()
    {
        $this->mainClass = Material::className();
        $this->searchClass = MaterialSearch::className();
        $this->parentController = '/material';
        parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * {@inheritdoc}
     * @param null $tab
     * @return string|\yii\web\Response
     * @throws NotFoundHttpException
     */
    public function actionIndex($parent = 0, $tab = null)
    {
        if (!$parent) {
            throw new NotFoundHttpException();
        }
        $groupModel = Group::findOne($parent);
        if ($groupModel) {
            if ($groupModel->config) {
                if ($model = $groupModel->materials[0]) {
                    return $this->redirect(['update', 'id' => $model->id, 'tab' => $tab]);
                } else {
                    return $this->redirect(['create', 'parent' => $parent, 'tab' => $tab]);
                }
            }
        } else {
            throw new NotFoundHttpException();
        }
        return parent::actionIndex($parent); // TODO: Change the autogenerated stub
    }

    /**
     * {@inheritdoc}
     * @param null $id
     * @return bool|string|\yii\web\Response
     */
    public function actionCreate($parent = null, $copy = null, $tab = null, $id = null)
    {
        if (!$parent) {
            throw new NotFoundHttpException();
        }
        $groupModel = Group::findOne($parent);
        if ($groupModel) {
            if ($groupModel->config) {
                if ($model = $groupModel->materials[0]) {
                    return $this->redirect(['update', 'id' => $model->id, 'tab' => $tab]);
                }
            } else {
                if ($groupModel->parent && !$id) {
                    throw new NotFoundHttpException();
                }
            }
            if ($groupModel->type == 0) {
                throw new NotFoundHttpException();
            }
        } else {
            throw new NotFoundHttpException();
        }
        return parent::actionCreate($parent, $copy, $tab); // TODO: Change the autogenerated stub
    }

    /**
     * @return string
     */
    public function actionFiles() {
        return $this->render('files');
    }

    /**
     * @param $model Material
     * {@inheritdoc}
     */
    protected function submitSaveClose($model)
    {
        $parent = $model->parent;
        if ($model->material_id) {
            return $this->redirect([$this->parentController.'/update', 'id' => $model->getMaterialParent()->id, 'tab' => 'group'.$parent->id]);
        }
        return $this->redirect(['index', 'parent' => $parent->id]);
    }

    /**
     * @param $model Material
     * {@inheritdoc}
     */
    protected function submitSaveCreate($model)
    {
        $this->redirect(['create', 'id' => $model->getMaterialParent()->id, 'parent' => $model->parent->id]);
    }

    /**
     * @param $model Material
     * {@inheritdoc}
     */
    protected function submitSaveCopy($model)
    {
        $this->redirect(['create', 'id' => $model->getMaterialParent()->id, 'parent' => $model->parent->id, 'copy' => $model->id]);
    }

    /**
     * {@inheritdoc}
     */
    public function actionMultiDelete($parent = null, $tab = null)
    {
        if (!$tab) {
            $group = Group::findOne($parent);
            if (!$group->group_id) {
                $this->multiDelete();
                return $this->redirect([$this->parentController, 'parent' => $parent]);
            }
        }
        return parent::actionMultiDelete($parent, $tab);
    }
}
